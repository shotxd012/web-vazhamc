<!-- Loading Animation Styles -->
<style>
    .loading-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #111827;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        transition: all 0.5s ease-out;
    }

    /* Star decoration */
    .stars {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
    }
    
    .star {
        position: absolute;
        width: 2px;
        height: 2px;
        background: white;
        border-radius: 50%;
        opacity: 0.3;
    }

    @keyframes twinkle {
        0%, 100% { opacity: 0.1; }
        50% { opacity: 0.7; }
    }

    .loading-content {
        text-align: center;
        background: rgba(31, 41, 55, 0.8);
        backdrop-filter: blur(12px);
        padding: 3rem;
        border-radius: 2rem;
        border: 1px solid rgba(75, 85, 99, 0.5);
        box-shadow: 0 0 20px rgba(239, 68, 68, 0.1);
        transform: translateY(0);
        animation: float 3s ease-in-out infinite;
    }

    #loading-svg {
        width: 200px;
        height: 200px;
    }

    .hide-loading {
        opacity: 0;
        pointer-events: none;
        transform: scale(0.95);
    }

    /* Animation for SHOT DEVS Logo */
    .logo-shot, .logo-devs {
        font-family: 'Arial', sans-serif;
        font-size: 55px; /* Increased font size */
        font-weight: bold;
        stroke-dasharray: 400;
        stroke-dashoffset: 400;
        animation: draw-text 2s ease forwards;
    }

    .logo-devs {
        animation-delay: 1s; /* Adjusted delay */
    }
    
    .loading-circle {
        stroke-dasharray: 597; /* Adjusted for larger circle */
        stroke-dashoffset: 597; /* Adjusted for larger circle */
        animation: drawCircle 2s linear infinite;
    }

    @keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
    }

    @keyframes draw-text {
        to {
            stroke-dashoffset: 0;
        }
    }

    @keyframes drawCircle {
        0% { stroke-dashoffset: 597; }
        50% { stroke-dashoffset: 0; }
        100% { stroke-dashoffset: -597; }
    }
</style>

<!-- Loading Animation HTML -->
<div id="loading" class="loading-container">
    <!-- Background stars -->
    <div class="stars" id="stars"></div>
    
    <div class="loading-content">
        <svg id="loading-svg" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <defs>
                <linearGradient id="logoGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                    <stop offset="0%" style="stop-color:#EF4444;" />
                    <stop offset="100%" style="stop-color:#991B1B;" />
                </linearGradient>
            </defs>
            
            <!-- Larger loading circle -->
            <circle cx="100" cy="100" r="95" fill="none" stroke="rgba(31, 41, 55, 0.5)" stroke-width="3" />
            <circle cx="100" cy="100" r="95" fill="none" stroke="url(#logoGradient)" stroke-width="3" class="loading-circle" />
            
            <!-- SHOT DEVS Animation -->
            <g>
                <!-- Text animation, repositioned for larger circle -->
                <text class="logo-shot" x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" fill="none" stroke="url(#logoGradient)" stroke-width="2">SHOT</text>
                <text class="logo-devs" x="50%" y="65%" dominant-baseline="middle" text-anchor="middle" fill="none" stroke="#FFFFFF" stroke-width="2">DEVS</text>
            </g>
        </svg>
        <!-- The text below the SVG has been removed -->
    </div>
</div>

<script>
    // Create stars
    function createStars() {
        const stars = document.getElementById('stars');
        const count = 100;
        
        for (let i = 0; i < count; i++) {
            const star = document.createElement('div');
            star.className = 'star';
            
            const x = Math.random() * 100;
            const y = Math.random() * 100;
            const size = Math.random() * 2 + 1;
            const opacity = Math.random() * 0.5 + 0.1;
            
            star.style.left = `${x}%`;
            star.style.top = `${y}%`;
            star.style.width = `${size}px`;
            star.style.height = `${size}px`;
            star.style.opacity = opacity;
            star.style.animation = `twinkle ${Math.random() * 5 + 3}s infinite ${Math.random() * 5}s`;
            
            stars.appendChild(star);
        }
    }

    window.addEventListener('load', function() {
        createStars();
        
        setTimeout(function() {
            const loadingElement = document.getElementById('loading');
            const contentElement = document.getElementById('content');
            loadingElement.classList.add('hide-loading');
            if (contentElement) {
                contentElement.style.display = 'block';
            }
            setTimeout(function() {
                loadingElement.style.display = 'none';
            }, 500);
        }, 3000);
    });
</script>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Ticket Detail</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    :root {
      --primary: #10b981;
      --primary-dark: #059669;
      --bg-dark: #111827;
      --bg-card: #1f2937;
      --border: #374151;
    }
    
    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    }
    
    .animate-fade-in {
      animation: fadeIn 0.3s ease-in-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .message-appear {
      animation: messageAppear 0.3s ease-out;
    }
    
    @keyframes messageAppear {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .hover-scale {
      transition: transform 0.2s;
    }
    
    .hover-scale:hover {
      transform: scale(1.02);
    }
    
    ::-webkit-scrollbar {
      width: 6px;
    }
    
    ::-webkit-scrollbar-track {
      background: #1f2937;
      border-radius: 4px;
    }
    
    ::-webkit-scrollbar-thumb {
      background: #4B5563;
      border-radius: 4px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
      background: #6B7280;
    }
    
    .scroll-to-bottom {
      position: absolute;
      bottom: 20px;
      right: 20px;
      background: rgba(31, 41, 55, 0.8);
      border: 1px solid var(--border);
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      opacity: 0;
      transition: opacity 0.3s, transform 0.2s;
      backdrop-filter: blur(4px);
      z-index: 10;
    }
    
    .scroll-to-bottom.visible {
      opacity: 1;
    }
    
    .scroll-to-bottom:hover {
      transform: scale(1.1);
      background: rgba(31, 41, 55, 1);
    }
    
    .status-badge {
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 600;
    }
    
    .status-open {
      background-color: rgba(16, 185, 129, 0.2);
      color: #10b981;
    }
    
    .status-closed {
      background-color: rgba(239, 68, 68, 0.2);
      color: #ef4444;
    }
    
    .message-hidden {
      display: none;
    }
    
    .load-more-button {
      background: rgba(31, 41, 55, 0.8);
      border: 1px solid var(--border);
      border-radius: 9999px;
      padding: 0.5rem 1rem;
      font-size: 0.75rem;
      color: #d1d5db;
      cursor: pointer;
      transition: all 0.2s;
      backdrop-filter: blur(4px);
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin: 0 auto 1rem auto;
      width: fit-content;
    }
    
    .load-more-button:hover {
      background: rgba(31, 41, 55, 1);
      transform: translateY(-2px);
    }
    
    .load-more-button svg {
      transition: transform 0.2s;
    }
    
    .load-more-button:hover svg {
      transform: translateY(-2px);
    }
    
    .message-divider {
      display: flex;
      align-items: center;
      color: #6B7280;
      font-size: 0.75rem;
      margin: 1rem 0;
    }
    
    .message-divider::before,
    .message-divider::after {
      content: "";
      flex: 1;
      border-bottom: 1px dashed #4B5563;
    }
    
    .message-divider::before {
      margin-right: 0.5rem;
    }
    
    .message-divider::after {
      margin-left: 0.5rem;
    }
  </style>
</head>
<body class="bg-gray-900 text-white flex flex-col min-h-screen">

  <!-- Fixed Navbar -->
  <nav class="fixed top-0 w-full bg-gray-800 border-b border-gray-700 shadow-lg z-50">
    <div class="max-w-6xl mx-auto px-4 py-3 flex justify-between items-center">
      <h1 class="text-xl font-bold text-emerald-400 flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z" />
        </svg>
        Admin Ticket Panel
      </h1>
      <a href="/admin/tickets" class="text-sm flex items-center gap-1 text-gray-300 hover:text-white transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to All Tickets
      </a>
    </div>
  </nav>

  <!-- Spacing for fixed nav -->
  <div class="h-16"></div>

  <!-- Content -->
  <main class="flex-1 max-w-6xl mx-auto py-10 px-6">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4">
      <h1 class="text-3xl font-bold text-emerald-400 flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        Ticket: #<%= ticket.ticketId %>
      </h1>
      <div class="status-badge <%= ticket.status === 'closed' ? 'status-closed' : 'status-open' %>">
        <%= ticket.status.toUpperCase() %>
      </div>
    </div>

    <!-- Ticket Info -->
    <div class="bg-gray-800 border border-gray-700 rounded-lg p-6 mb-6 shadow-lg hover-scale transition-all">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 text-sm">
        <div class="space-y-3">
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">Title:</span> 
            <span class="text-gray-200"><%= ticket.title %></span>
          </p>
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">Reason:</span> 
            <span class="text-gray-200"><%= ticket.reason %></span>
          </p>
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">Type:</span> 
            <span class="text-gray-200"><%= ticket.type %></span>
          </p>
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">Description:</span> 
            <span class="text-gray-200"><%= ticket.description %></span>
          </p>
        </div>
        <div class="space-y-3">
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">User:</span> 
            <span class="text-gray-200"><%= ticket.username %></span>
          </p>
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">User ID:</span> 
            <span class="text-gray-200 text-xs md:text-sm font-mono"><%= ticket.userId %></span>
          </p>
          <p class="flex items-start gap-2">
            <span class="text-emerald-400 font-semibold min-w-[80px]">Created:</span> 
            <span class="text-gray-200"><%= new Date(ticket.createdAt || Date.now()).toLocaleString() %></span>
          </p>
          <% if (ticket.closedReason) { %>
            <p class="flex items-start gap-2">
              <span class="text-red-400 font-semibold min-w-[80px]">Closed:</span> 
              <span class="text-red-300 italic"><%= ticket.closedReason %></span>
            </p>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Messages + Reply -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Scrollable Chat -->
      <div class="md:col-span-2 bg-gray-800 border border-gray-700 rounded-lg shadow-lg relative">
        <div class="p-4 border-b border-gray-700 flex justify-between items-center">
          <h2 class="text-lg font-bold text-emerald-400 flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
            </svg>
            Conversation
          </h2>
          <span class="text-xs text-gray-400"><%= messages.length %> messages</span>
        </div>
        
        <div id="chat-box" class="p-4 h-[32rem] overflow-y-auto space-y-4 scroll-smooth">
          <!-- Load More Button (only shows if there are more than 4 messages) -->
          <% if (messages.length > 4) { %>
            <button id="load-more-btn" class="load-more-button">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
              </svg>
              Show Previous Messages (<span id="hidden-count"><%= messages.length - 4 %></span>)
            </button>
          <% } %>
          
          <% 
            // Calculate which messages should be visible initially
            const visibleCount = 4;
            const totalMessages = messages.length;
            const hiddenCount = Math.max(0, totalMessages - visibleCount);
            
            messages.forEach((msg, index) => {
              const isUser = msg.userId === ticket.userId;
              const isHidden = index < hiddenCount;
              const isFirstVisible = index === hiddenCount;
          %>
            <% if (isFirstVisible && hiddenCount > 0) { %>
              <div class="message-divider" id="new-messages-divider">
                New Messages
              </div>
            <% } %>
            
            <div class="flex <%= isUser ? 'justify-end' : 'justify-start' %> message-appear <%= isHidden ? 'message-hidden' : '' %>" 
                 data-message-index="<%= index %>" 
                 style="animation-delay: <%= (index - hiddenCount) * 0.05 %>s">
              <div class="bg-gray-700 p-4 rounded-lg max-w-md w-full shadow-md">
                <div class="flex items-center gap-2 mb-3">
                  <img src="https://cdn.discordapp.com/avatars/<%= msg.userId %>/<%= msg.avatar %>.png" 
                       class="w-8 h-8 rounded-full border border-gray-600" 
                       onerror="this.src='https://ui-avatars.com/api/?name=<%= encodeURIComponent(msg.username || 'User') %>&background=10b981&color=fff'"/>
                  <div>
                    <span class="font-semibold text-emerald-400 text-sm">
                      <%= isUser ? msg.username : (msg.role || "Admin") %>
                    </span>
                    <div class="text-xs text-gray-400">
                      <%= new Date(msg.timestamp || Date.now()).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %>
                    </div>
                  </div>
                </div>
                <% if (msg.message) { %>
                  <p class="text-sm text-gray-200 whitespace-pre-wrap"><%= msg.message %></p>
                <% } %>
                <% if (msg.image) { %>
                  <div class="mt-3">
                    <img src="<%= msg.image %>" class="rounded-md max-h-64 border border-gray-600 hover:opacity-95 cursor-zoom-in transition-opacity" 
                         onclick="openImageModal(this.src)">
                  </div>
                <% } %>
              </div>
            </div>
          <% }) %>
          
          <% if (messages.length === 0) { %>
            <div class="flex justify-center items-center h-full">
              <div class="text-center text-gray-400">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto mb-3 opacity-50" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                </svg>
                <p>No messages yet</p>
                <p class="text-sm mt-2">Start the conversation by sending a reply</p>
              </div>
            </div>
          <% } %>
        </div>
        
        <!-- Scroll to bottom button -->
        <div id="scroll-btn" class="scroll-to-bottom">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
          </svg>
        </div>
      </div>

      <!-- Admin Reply Form -->
      <div class="bg-gray-800 rounded-lg shadow-lg border border-gray-700 h-fit">
        <div class="p-4 border-b border-gray-700">
          <h2 class="text-lg font-bold text-emerald-400 flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
            Reply to Ticket
          </h2>
        </div>
        
        <% if (ticket.status !== "closed") { %>
          <form id="replyForm" action="/admin/ticket/<%= ticket.ticketId %>/reply" method="POST" enctype="multipart/form-data" class="p-4 space-y-4">
            <div class="space-y-2">
              <label for="message" class="text-sm text-gray-300 block">Message</label>
              <textarea 
                id="message"
                name="message" 
                placeholder="Write your message..." 
                class="w-full p-3 bg-gray-700 border border-gray-600 rounded-md resize-none text-white text-sm focus:border-emerald-500 focus:ring focus:ring-emerald-500 focus:ring-opacity-20 transition-all"
                rows="5"
                required
              ></textarea>
            </div>
            
            <div class="space-y-2">
              <label for="image" class="text-sm text-gray-300 block">Attachment (optional)</label>
              <div class="relative">
                <input 
                  type="file" 
                  id="image"
                  name="image" 
                  accept="image/*" 
                  class="w-full p-2 bg-gray-700 border border-gray-600 rounded-md text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:bg-gray-600 file:text-white hover:file:bg-gray-500 cursor-pointer"
                />
                <div id="preview" class="mt-2 hidden">
                  <img id="image-preview" class="max-h-32 rounded-md border border-gray-600" />
                  <button type="button" id="remove-image" class="absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 transform translate-x-1/2 -translate-y-1/2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              </div>
            </div>
            
            <button type="submit" class="bg-emerald-600 hover:bg-emerald-700 w-full py-3 rounded-md text-white text-sm font-medium transition-colors flex items-center justify-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
              </svg>
              Send Reply
            </button>
          </form>
        <% } else { %>
          <div class="p-4 text-center">
            <div class="bg-red-500 bg-opacity-20 p-4 rounded-md">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 mx-auto mb-2 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
              <p class="text-red-300">This ticket is closed</p>
              <p class="text-sm text-gray-400 mt-2">Reopen the ticket to continue the conversation</p>
            </div>
          </div>
        <% } %>
      </div>
    </div>

    <!-- Footer Actions -->
    <div class="mt-8 flex flex-col sm:flex-row gap-4 justify-end">
      <% if (ticket.status === "closed") { %>
        <form action="/admin/ticket/<%= ticket.ticketId %>/reopen" method="POST" class="inline-block">
          <button class="bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-md text-white text-sm font-medium transition-colors flex items-center justify-center gap-2 w-full sm:w-auto">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
            Reopen Ticket
          </button>
        </form>
      <% } else { %>
        <form action="/admin/ticket/<%= ticket.ticketId %>/close" method="POST" class="flex flex-col sm:flex-row items-center gap-3 w-full">
          <input 
            type="text" 
            name="reason" 
            required 
            placeholder="Reason for closing..." 
            class="p-3 rounded-md bg-gray-700 border border-gray-600 flex-grow text-sm focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-20 transition-all" 
          />
          <button type="submit" class="bg-red-600 hover:bg-red-700 px-6 py-3 rounded-md text-white text-sm font-medium transition-colors flex items-center justify-center gap-2 w-full sm:w-auto">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
            Close Ticket
          </button>
        </form>
      <% } %>
    </div>
  </main>

  <!-- Image Modal -->
  <div id="imageModal" class="fixed inset-0 bg-black bg-opacity-80 z-50 flex items-center justify-center p-4 hidden">
    <div class="relative max-w-4xl w-full">
      <button id="closeModal" class="absolute top-4 right-4 bg-gray-800 rounded-full p-2 text-white hover:bg-gray-700 transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <img id="modalImage" class="max-h-[80vh] mx-auto rounded-lg" />
    </div>
  </div>

  <!-- Footer -->
  <footer class="bg-gray-800 border-t border-gray-700 text-center py-4 text-sm text-gray-400 mt-10">
    &copy; <%= new Date().getFullYear() %> VazhaMC Admin Panel
  </footer>

  <script>
    // Enhanced scroll functionality
    document.addEventListener('DOMContentLoaded', function() {
      const chatBox = document.getElementById("chat-box");
      const scrollBtn = document.getElementById("scroll-btn");
      const loadMoreBtn = document.getElementById("load-more-btn");
      const hiddenCountEl = document.getElementById("hidden-count");
      const newMessagesDivider = document.getElementById("new-messages-divider");
      
      // Track how many messages are currently hidden
      let hiddenMessages = <%= Math.max(0, messages.length - 4) %>;
      const totalMessages = <%= messages.length %>;
      const batchSize = 4; // Number of messages to show when "load more" is clicked
      
      // Initial scroll to bottom
      scrollToBottom();
      
      // Check if we're at the bottom of the chat
      function isAtBottom() {
        const threshold = 100; // pixels from bottom to consider "at bottom"
        return chatBox.scrollHeight - chatBox.clientHeight - chatBox.scrollTop <= threshold;
      }
      
      // Scroll to bottom function
      function scrollToBottom() {
        chatBox.scrollTop = chatBox.scrollHeight;
      }
      
      // Show/hide scroll button based on scroll position
      chatBox.addEventListener('scroll', function() {
        if (!isAtBottom()) {
          scrollBtn.classList.add('visible');
        } else {
          scrollBtn.classList.remove('visible');
        }
      });
      
      // Scroll to bottom when button is clicked
      scrollBtn.addEventListener('click', scrollToBottom);
      
      // Load more messages when button is clicked
      if (loadMoreBtn) {
        loadMoreBtn.addEventListener('click', function() {
          // Calculate how many more messages to show
          const showCount = Math.min(batchSize, hiddenMessages);
          const startIndex = hiddenMessages - showCount;
          
          // Show the next batch of messages
          for (let i = startIndex; i < hiddenMessages; i++) {
            const message = document.querySelector(`[data-message-index="${i}"]`);
            if (message) {
              message.classList.remove('message-hidden');
              // Add a small delay for animation
              setTimeout(() => {
                message.classList.add('animate-fade-in');
              }, 10);
            }
          }
          
          // Update hidden count
          hiddenMessages -= showCount;
          
          // Update the counter in the button
          if (hiddenCountEl) {
            hiddenCountEl.textContent = hiddenMessages;
          }
          
          // Hide the button if all messages are shown
          if (hiddenMessages <= 0) {
            loadMoreBtn.style.display = 'none';
            if (newMessagesDivider) {
              newMessagesDivider.style.display = 'none';
            }
          }
        });
      }
      
      // Image preview functionality
      const imageInput = document.getElementById('image');
      const imagePreview = document.getElementById('image-preview');
      const previewContainer = document.getElementById('preview');
      const removeImageBtn = document.getElementById('remove-image');
      
      if (imageInput) {
        imageInput.addEventListener('change', function() {
          if (this.files && this.files[0]) {
            const reader = new FileReader();
            
            reader.onload = function(e) {
              imagePreview.src = e.target.result;
              previewContainer.classList.remove('hidden');
            }
            
            reader.readAsDataURL(this.files[0]);
          }
        });
      }
      
      if (removeImageBtn) {
        removeImageBtn.addEventListener('click', function() {
          imageInput.value = '';
          previewContainer.classList.add('hidden');
        });
      }
      
      // Form submission with animation
      const replyForm = document.getElementById('replyForm');
      if (replyForm) {
        replyForm.addEventListener('submit', function() {
          const submitBtn = this.querySelector('button[type="submit"]');
          submitBtn.innerHTML = `
            <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Sending...
          `;
          submitBtn.disabled = true;
        });
      }
      
      // Image modal functionality
      const imageModal = document.getElementById('imageModal');
      const modalImage = document.getElementById('modalImage');
      const closeModal = document.getElementById('closeModal');
      
      window.openImageModal = function(src) {
        modalImage.src = src;
        imageModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      }
      
      if (closeModal) {
        closeModal.addEventListener('click', function() {
          imageModal.classList.add('hidden');
          document.body.style.overflow = '';
        });
      }
      
      // Close modal when clicking outside the image
      if (imageModal) {
        imageModal.addEventListener('click', function(e) {
          if (e.target === imageModal) {
            imageModal.classList.add('hidden');
            document.body.style.overflow = '';
          }
        });
      }
      
      // Close modal with escape key
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && !imageModal.classList.contains('hidden')) {
          imageModal.classList.add('hidden');
          document.body.style.overflow = '';
        }
      });
    });
  </script>
</body>
</html>